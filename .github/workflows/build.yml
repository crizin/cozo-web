name: Build

on:
  push:
    branches:
      - main
      - f/*

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
      - name: Slack Notification
        uses: act10ns/slack@v2
        with:
          status: starting

      - name: Checkout
        uses: actions/checkout@v3

      - name: Get Short Hash
        id: short-sha
        uses: benjlevesque/short-sha@v2.2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: true

      - name: Build main webapp
        uses: docker/build-push-action@v3
        if: github.ref == 'refs/heads/main'
        with:
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/${{ github.event.repository.name }}:${{ steps.short-sha.outputs.sha }},${{ steps.login-ecr.outputs.registry }}/${{ github.event.repository.name }}:latest

      - name: Build canary webapp
        uses: docker/build-push-action@v3
        if: startsWith(github.ref, 'refs/heads/f/')
        with:
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/${{ github.event.repository.name }}-canary:latest

      - name: Slack Notification
        uses: act10ns/slack@v2
        if: always()
        with:
          status: ${{ job.status }}
